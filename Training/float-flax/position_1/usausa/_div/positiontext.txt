ポジションプロパティを学ぶ。

最後の方に学ぶポジションプロパティは　実効条件が複雑でブラウザによっては誤動作を起こす厄介なプロパティです。　
しかし　理解してつかってもらうことで　レイアウトの自由度があがる。　しかもCSS3 やJavascript での制御もポジションプロパティを理解していないと
面白い演出のサイトを実現できないことがおおい。　　float プロパティとの併用で　適材適所のレイアウトを実現してほしい。　サイトデザインの上で是が非でもマスターしてほしいプロパティです。

　注意：　ポジションプロパティーの特製を理解して使用しないとレイアウト崩れがおきやすい。柔軟なレイアウトはフロートレイアウトです。ポジションレイアウトを中心にサイトレイアウトすると非常に手間がかかります。
メンテナンスも時間がかかるでしょう。　

　相対　position: relative;
　　　相対設定されたタグはその支配下の子要素が絶対は位置される。　指定したタグはデフォルトの要素の配置になる。

　絶対　position: absolute;
　　　親要素に相対配置が指定されていた場合。　プロパティ　top right bottom left の数値の座標で配置される。
　　　親要素に相対配置がされていなければ　root　body要素から　絶対配置される。

　固定　position: fixd;
　　　　root　body要素から　絶対配置される。　ie6は読み込まず無視してくれればいいが　レンダリングバグを起こす。
　　回避方法はいろいろ　サイトを検索してください。　要素構造　で回避方法がちがいますので　ここでは省略します。
　　

では一般的なポジションの使い方。

<div id="pearent">
 <img src="../images/bunner_1.gif" alt="ウサギが" class="base" width="300" height="160" />
 <img src="../images/point_2.gif" alt="誕生しました。" class="up"  width="30" height="30" />
</div>

タグをセレクタで指定しやすいように　classもしくはId属性を指定しておく。

包括タグ「親タグ」にあたる　
　１div#pearentに　高さ幅をcssで宣言し。
　２　position　relativeを宣言する。
包括されているタグ　子要素　ここでは　img要素に
　１　position: absolute;を設定する。
　２　top 、right、 bottom 、leftの　上下左右いずれかの片方のプロパティで指定したい値をいれる。
ポジションレイアウトしたくない子要素にはposition設定しなくてよい。

CSS

div#pearent{
positon:relative;
height:160px;
width:300px;
}
子要素
div#pearent img.up {
position:absolute;
right:20px
top:-10px;
}


 
　
　
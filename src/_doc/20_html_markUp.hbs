---
title: ブラウザとHTMLコード
discription: discription
cat: HTML
next-page-url: "21_html_markUp.html"
filename: 20_html_markUp.html
prev-page-url: "#"
titlename: "{{title.titlename}}"
text: "{{item.text}}"
text2: "{{item.text}}"
---
<div class="container mb-5">
<article id="w-article">
<!-- editable area ########             -->
        <h1>{{title}} - {{cat}}</h1>
        <p><span>category:</span> <span class="badge badge-primary">{{cat}}</span></p>
        <hr>
<!-- 序章 モジュール -->
<div class="card mb-4">
<div class="card-body">
<p  class="card-text">ブラウザとソースコードの関係を中心のお話し。</p>
<div class="alert alert-info">
    <ul>
    <li>ブラウザとユーザーエージェント・・・・・・
            ブラウザとはなにか？制作者で知っておきたい使い方。</li>
    <li>HTMLのソースコードとその確認のしかたを解説します。</li>
    </ul>
</div>
</div>
</div>



<!-- 目次 モジュール -->
<div class="bg-light p-3 mb-4">
<h2>目次</h2>
<ul id="w-indexlistBox">
    <li v-for="item in items" class="w-indexlistBox-list">
      <a v-bind:href="item.id" data-scroll >{{text2}}</a>
    </li>
</ul>
</div>
<!-- / 目次 モジュール -->
<<!-- 本文のセクション モジュール -->
    <div id="s1" class="mt-n6 pt-6 mb-6 clearfix">

        <h2>ブラウザとユーザーエージェント</h2>
        <p>ブラウザとはなにか？制作者で知っておきたい使い方を確認しておきましょう。
        *<em>ユーザーエージェントと呼ぶ種類のアプリケーションの一つがwebブラウザです。</em></p>
        <h3>ユーザーエージェント（UA）とは</h3>
        <blockquote>
        <p><cite><a href="https://ja.wikipedia.org/wiki/%E3%83%A6%E3%83%BC%E3%82%B6%E3%83%BC%E3%82%A8%E3%83%BC%E3%82%B8%E3%82%A7%E3%83%B3%E3%83%88">ユーザーエージェント </a></cite></p>
        </blockquote>
        <blockquote>
        <p>ウエブブラウザを含めHTTPを用いてWorld Wide Web（インターネット）にアクセスする、ウェブブラウザなどのソフトウェアのこと。</p>
        </blockquote>
        <dl>
        <dt><abbr title="Hypertext Transfer Protocol">HTTP</abbr></dt>
        <dd>
        [「Hypertext Transfer Protocol」](https://ja.wikipedia.org/wiki/Hypertext_Transfer_Protocol)
        <p>ハイパーテキストトランスファープロトコル。</p>
        <blockquote>
        <p>（ハイパーテキスト・トランスファー・プロトコル、略称 HTTP）とは、HTMLなどのコンテンツの送受信に用いられる通信プロトコルである。主としてWorld Wide Webにおいて、WebブラウザとWebサーバとの間での転送に用いられる。日本標準仕様書ではハイパテキスト転送プロトコルとも呼ばれる。(以下略)</p>
        </blockquote>
        <blockquote>
        <p>名前の通り、 HTML (HyperText Markup Language) や XML (Extensible Markup Language) によって記述されたハイパーテキストの転送を主な目的としているが、それ以外にも、バイナリ形式の画像、音声を含め、様々なデータを扱うことが可能である。その汎用性からセンサーからの定期的なデータの取得などにも用いられる。</p>
        </blockquote>
        <blockquote>
        <p>トランスポート・プロトコルとして通常TCPを使用する。</p>
        </blockquote>
        <blockquote>
        <p>HTTPはリクエスト-レスポンス型のプロトコルであり、クライアントがサーバにリクエストメッセージを送信する。 基本的な考え方は非常に単純で、「何を」「どうして」欲しいのかを伝える。URLが「何を」、メソッドが「どうして」に当たる。 サーバはこれにレスポンスメッセージを返し、基本的にこの時点で初期状態に戻る。つまり、サーバはクライアントの状態を保存しない。</p>
        </blockquote>
        <blockquote>
        <p>World Wide WebにおけるWebページなどのリソースは、Uniform Resource Identifierによって指定される。HTTP を使用してリソースにアクセスするときは、http: が先頭についた URL を使用する。下にURL の例を挙げる。
        <br>
        <code>http://www.example.co.jp/~test/samples/index.html</code></p>

        <p><cite>Hypertext Transfer Protocol - Wikipedia</cite></p>
        </blockquote>
        </dd>
        </dl>
        <dl>
        <dt>HTTPユーザーエージェント</dt>
        <dd>
            <blockquote>
        HTTPを用いてリソースの取得等を行うユーザーエージェントをHTTPユーザーエージェントと呼ぶ。
        HTTPユーザーエージェントには、ウェブブラウザや、リソースを自動的に処理するクローラなどがある。
    </blockquote>
    </dd>
        </dl>
        <p><strong>一般的なウェブブラウザはHTTPユーザーエージェントになります。</strong></p>
        <h5>HTTPユーザーエージェントでないUA</h5>
        <p>主にみなさんがPCでつかうものとして。</p>
        <ul>
        <li>FTPクライアントソフト</li>
        <li>Emailソフト</li>
        </ul>
</div>
<div id="s2" class="mt-n6 pt-6 mb-6 clearfix">
        <h2>ウェブブラウザ</h2>
        <p>制作は実際のブラウザを使います。</p>
        <h3 id="pc">pc</h3>
        <ul>
        <li>
        <p><a href="https://www.google.co.jp/chrome/?brand=CHBD&amp;gclid=CjwKCAjw8qjnBRA-EiwAaNvhwFFWuMfu63Q2H25Jgd_v2oY8PHhA0B9XNZLZvCSZrnYGKCNJFIoJ1RoCoC0QAvD_BwE&amp;gclsrc=aw.ds" target="_blank" rel="noopener" >googleChrome</a><br>
        対応OS：OSX windows</p>
        </li>
        <li>
        <p><a href="https://www.mozilla.org/ja/firefox/new/" target="_blank" rel="noopener">FireFox</a><br>
        対応OS：OSX windows</p>
        </li>
        <li>
        <p>OS付属のブラウザ<br>
        <ul>
        <li>safari:OSX</li>
        <li>Edge:windews</li>
        </ul>
        <p>
        <small>訓練では確認作業以外OSバンドルのブラウザは基本つかいません。制作するプロジェクトによって適応ブラウザを決定し各ブラウザの表示確認やデバッグのための工数をとます。</small></p>
        </li>
        </ul>
        <h3>SP(スマートフォン)タブレットPC</h3>
        <p>IOS :IOSsafari 機種のバージョンによる。<br>
        android : android ブラウザー 機種のバージョンメーカ-による。</p>
</div>
<div id="s3" class="mt-n6 pt-6 mb-6 clearfix">
        <h2>制作においてはブラウザのバージョンと範囲を決める。</h2>
        <p>入力が正しくできるか表示は正しいかを確認するため機種をかなりそろえなければならないメーカーもある。（作業工数も増える）
        HP制作などの会社は多くの検証機種を持ち合わせていないので最新のブラウザで無理なく稼働すればOKになる。その分制作費は比較的安い</p>
        <p>クライアントの使っているブラウザ環境を確認する。　クライアントの確認環境が数世代前で開発側で確認とれない。ということもあります。
        <br>妥当なブラウザでの確認環境を双方すりあわせれるようにしましょう。</p>
<div class="card mb-6">
        <h5 class="card-header">余談</h5>
        <div class="card-body">
        <h6>興味における5つのレベル イノベーター理論</h6>
        <p>商品やサービスについての反応について早い順に5つ分類している。</p>
        <ul>
<li>イノベーター（Innovators）：革新者 例え法外な値段だとしても体験しようとする先駆者(盲目なファン？) 直観を頼りにし一番乗りしたい人</li>
<li>アーリーアダプター（Early Adopters）：初期採用層 イノベーターの反応をみつつもよければ乗っかる人</li>
<li>アーリーマジョリティ（Early Majority）：前期追随層 アーリーアダプターの好評を聞きつけ使ってみる人</li>
<li>レイトマジョリティ（Late Majority）：後期追随層 シェアの多さから多数の乗っかる人</li>
<li>ラガード（Laggards）：遅滞層 基本変化は嫌いで昔のままでいいが。市場に昔のものがなくなったので仕方なく購入するひと</li>
        </ul>
        </div>
</div>
</div>

<div id="s4" class="mt-n6 pt-6 mb-6 clearfix">
        <h2>ブラウザの知っとけ機能</h2>
        <ul>
        <li><a href="https://support.google.com/chrome/answer/157179?hl=ja" target="_blank" rel="noopener">Chrome のキーボード ショートカット</a></li>
        <li><a href="https://support.mozilla.org/ja/kb/keyboard-shortcuts-perform-firefox-tasks-quickly" target="_blank" rel="noopener">Firefox のキーボードショートカット</a></li>
        </ul>
        <p>ショートカットキーはwindows基準で記述しています。</p>
        <p>ctrlキーは windows
        commandキーはMac OSX</p>
        <table class="table table-bordered">
        <thead>
        <tr>
        <th style="text-align:left">機能</th>
        <th>ショートカットキー</th>
        <th>概要</th>
        </tr>
        </thead>
        <tbody>
        <tr>
        <td style="text-align:left">ページの読み直し（キャッシュクリアー）</td>
        <td><kbd>F-5</kbd> , <kbd>ctrl</kbd>+<kbd>r</kbd></td>
        <td>ページを読み直す</td>
        </tr>
        <tr>
        <td style="text-align:left">ページのデータすべての読み直し（スーパーキャッシュクリアー）</td>
        <td><kbd>ctrl</kbd>+<kbd>shift</kbd>+<kbd>r</kbd></td>
        <td>キャッシュデータも含めすべて読み直す</td>
        </tr>
        <tr>
        <td style="text-align:left">検索</td>
        <td><kbd>ctrl</kbd>+<kbd>f</kbd></td>
        <td>ページの中の文字列の検索</td>
        </tr>
        <tr>
        <td style="text-align:left">ページの保存</td>
        <td><kbd>ctrl</kbd>+<kbd>s</kbd></td>
        <td>任意のフォルダーにページをコピーする</td>
        </tr>
        <tr>
        <td style="text-align:left">ページの印刷</td>
        <td><kbd>ctrl</kbd>+<kbd>p</kbd></td>
        <td>印刷する　印刷プレビューを見る</td>
        </tr>
        <tr>
        <td style="text-align:left">シークレットレットモードでみる</td>
        <td><kbd>ctrl</kbd>+<kbd>shift</kbd>+<kbd>n</kbd></td>
        <td>閲覧履歴を残さないUA情報を送信しない</td>
        </tr>
        <tr>
        <td style="text-align:left">ページソースを見る</td>
        <td><kbd>ctrl</kbd>+<kbd>u</kbd></td>
        <td>閲覧中のページのHTMLソースコードをみる</td>
        </tr>
        <tr>
        <td style="text-align:left">ページの検証モード</td>
        <td><kbd>ctrl</kbd>+<kbd>shift</kbd>+<kbd>i</kbd></td>
        <td>閲覧中のページの詳細なDOM情報をみる。</td>
        </tr>
        </tbody>
        </table>
        <p>*（OSXは「ctrl」は「command」で入力）</p>
        <h6 id="%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88">ポイント</h6>
        <ul>
        <li>安全につかうために最新のものを使いましょう。</li>
        <li>広告を気にしなければOSに付属のものでもOK</li>
        </ul>
        <hr>
</div>
<div id="s5" class="mt-n6 pt-6 mb-6 clearfix">

        <h2>ブラウザとHTMLとソースコードとその確認のしかた。</h2>
        <p>これから学習するのはHTMLソースコードの読み書きです。後ほどDOMなどもでてきて少し混乱しますが・・・あくまでサーバーに上げるHTMLコードを読み書きできるようになるのが大切です。</p>
        <p>HTMLコードをブラウザが読み取ってどのような処理を経てモニターに表示するのかを解説します。</p>
        <h3>ソースコードを見る。</h3>
        <ul>
        <li>
        <p>webページのソースコードは画面上でマウスを右クリックし。コンテキストメニューから「ソースを表示」や「ソースコードを見る」などで表示されます。</p>
        </li>
        <li>
        <p>ショートカットキー<kbd>ctrl</kbd>+<kbd>U</kbd>でもみれます。</p>
        </li>
        </ul>
        <figure class="mb-4"><figcaption> google Chromeでのソースコード表示 </figcaption>
          <img class="img-fluid" src="_images/_MK/srccode.PNG" alt="ソースコード">
        </figure>

        <div class="card mb-3 p-4">
<div class="row ">
<div class="col-md-4">
<img src="_images/_html/braleft.PNG" alt="ブラウザの右上側（chrome）" class="card-img">
</div>
<div class="col-md-8">
<div class="card-body ">
<h3>ブラウザの描画の仕組み</h3>
<p><br>
*「くるくる（仮称）」とは更新するときの押すアドレスバーの横の丸い矢印マークのことです。</p>
<ol>
<li>ページリクエスト</li>
<li>HTMLファイルの受信-&gt;受信したファイルがソースコード</li>
<li>受信中のHTMLファイルから順次リソースをリクエスト</li>
<li>リソースを元にDOM(document object model)に変換しはじめる。</li>
<li>ウィンドウ領域に表示（描画し始める）（くるくるしてる。）</li>
<li>すべてのリソースが揃い描画が終わると（くるくるがとまる。）</li>
</ol>
</div>
</div>
</div>
<h3>ブラウザとソースコード</h3>
<p>ブラウザはHTMLファイルを取得できないとユーザーに情報を提示できません。</p>
<p>HTMLファイルに表示する文章や見た目を制御するCSSファイルをリクエストする命令を記述したりしてHTMLファイルの記述をもとにブラウザが内容を画面に表示します。</p>
<div class="card-body">
<h3 class="card-header"></h3>
<img src="_images/_OL/webttage.png" alt="ブラウザとソースコード">
<ul>
<li> HTMLファイル - webサイトを表示するため根幹になるファイル マークアップ言語</li>
<li> cssファイル - webサイトを装飾、レイアウトするための言語 スタイルシート</li>
<li> javascriptファイル - webサイトの機能の拡張するプログラム言語</li>

</ul>
</div>
</div>
</div>
<hr>
<div id="s6" class="mt-n6 pt-6 mb-6 clearfix">
<h2>ソースコードと検証の表示が違うことがある。</h2>
<p class="badge badge-info">ここからのお話しはHTMLやCSSを書くようになってからのお話しです。</p>
<p>ソースコードと検証で表示される内容は違うのはjavascriptなどプログラムでで表示コードに割り込みが発生しコードとは違う表示になります。<br>
マークアップエンジニアはローカルに送信するソースコードを作成するが仕事です</p>
<h5>firefoxでソースコード検証</h5>
<p>簡単なソースコードのバリデーション検証はW3Cバリデーターを使わずともfirefoxブラウザのソースコードの表示で確認できる。</p>
<p>エラーの恐れがあったり非推奨のタグを使っている場合、赤字で表示してくれる。
英語でのアシストだがマウスをホバーするとエラーの理由なども教えてくれる。</p>
<h4>FireFoxで間違ったソースコードで確認してみましょう。</h4>
<p>FireFoxで開いてソースコードを確認していみましょう。</p>
<ul>
<li>任意のテキストエディターを開き。</li>
<li>新規でHTMLファイルを作る。</li>
<li>下のコードをコピーしてペーストして適当な名前で保存します。「errer.html」拡張子は「.html」でお願いします。</li>
<li>保存場所はすぐに捨てれるデスクトップに保存すればいいでしょう。</li>
<li>アイコンを右クリックして-&gt; アプリケーションで保存-&gt; fireFoxで見る</li>
<li>firefoxで開いたら。　マウスでブラウザのウィンドウを右クリック ソースコードを見る。</li>
</ul>
<h5>間違ったコード例</h5>
<div class="mb-3">
<pre class="hljs line-numbers language-xml" data-src="prism.js"><code>&lt;!DOCTYPE html&gt;
        &lt;html&gt;
         &lt;head&gt;
         &lt;meta charset=&quot;UTF-8&quot;&gt;
         &lt;title&gt;般若心経&lt;/title&gt;
         &lt;/head&gt;
         &lt;body&gt;
         &lt;div&gt;
          観自在菩薩　行深般若波羅蜜多時　照見五蘊皆空

        度一切苦厄　舎利子　色不異空　空不異色　色即是空　空即是色
         &lt;/body&gt;
        &lt;/html&gt;
</code></pre></div>
<div class="card">
<h5 class="card-header">表示結果</h5>
<div class="card-body">
<p><a href="_res/errer.html"><img src="_images/_html/Errer_html.PNG" class="img-fluid shadow-sm" alt="般若心経"></a></p>
<p class="card-text">div要素の終了タグをわざとかかなかった。fierfoxでのエラーメッセージは「body要素がここでおわってるけど終わってない要素があるよ。」とメッセージしてくれている。</p>
<p>ただしこのようなコードのミスはしょっちゅうあるのでブラウザはコードにミスがある場合も代替案を持っておりそのためユーザーが困らないような情報伝達をするようにプログラミングされている。</p>
<h5>エラーの表示には癖がある。</h5>
<p>かならずしも間違った場所ではなくその直後にエラーがでたりする。
HTMLのルールを理解していくとでエラーの理由なども推測できるようになる。</p>
</div>
</div>

</div>
<div id="s7" class="mt-n6 pt-6 mb-6 clearfix">
<h2>まとめ</h2>
<ul>
<li>ブラウザはユーザーエージェントの一種</li>
<li>ソースコードがないとブラウザは表示できない。</li>
<li>ブラウザからソースコードが確認できる。</li>
</ul>
</div>

<!-- editable area end ########             -->
</article>
</div>
<!-- /container-->

<!-- / w-aside2 --->
